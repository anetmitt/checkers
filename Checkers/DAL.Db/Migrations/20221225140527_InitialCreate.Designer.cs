// <auto-generated />
using System;
using DAL.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221225140527_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Domain.CheckersGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CheckersOptionsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GameOver")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GameStarted")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameWinner")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerOneName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerOneType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerTwoName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerTwoType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CheckersOptionsId");

                    b.ToTable("CheckersGames");
                });

            modelBuilder.Entity("Domain.CheckersGameState", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CheckersGameId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerializedGameState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("CheckersGameId");

                    b.ToTable("CheckersGameStates");
                });

            modelBuilder.Entity("Domain.CheckersOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LoadedOptions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("WhiteStarts")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CheckersOptions");
                });

            modelBuilder.Entity("Domain.CheckersGame", b =>
                {
                    b.HasOne("Domain.CheckersOptions", "CheckersOptions")
                        .WithMany("CheckersGame")
                        .HasForeignKey("CheckersOptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckersOptions");
                });

            modelBuilder.Entity("Domain.CheckersGameState", b =>
                {
                    b.HasOne("Domain.CheckersGame", "CheckersGame")
                        .WithMany("CheckersGameStates")
                        .HasForeignKey("CheckersGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckersGame");
                });

            modelBuilder.Entity("Domain.CheckersGame", b =>
                {
                    b.Navigation("CheckersGameStates");
                });

            modelBuilder.Entity("Domain.CheckersOptions", b =>
                {
                    b.Navigation("CheckersGame");
                });
#pragma warning restore 612, 618
        }
    }
}
